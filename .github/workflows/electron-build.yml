name: Electron Build

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm ci
    - name: Build React app
      run: npm run react-build
    - name: Install snapcraft
      run: sudo snap install snapcraft --classic
      if: runner.os == 'Linux'
    - name: Build Electron app
      run: npm run electron-build
      env:
        GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
    - name: Create Git tag
      run:  |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
        git tag "v$(date +'%Y%m%d%H%M%S')"
        git push origin --tag
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_git_tag.outputs.tag }}
        release_name: Release ${{ steps.create_git_tag.outputs.tag }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/my-app.${{ matrix.os == 'windows-latest' && 'exe' || 'dmg' }}
        asset_name: my-app.${{ matrix.os == 'windows-latest' && 'exe' || 'dmg' }}
        asset_content_type: application/octet-stream
